<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.apache.tuscany.sca.services.bindings</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-incubator-M2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>sunjars</artifactId>
    <packaging>pom</packaging>
    <name>Project to install the Sun jars</name>

    <properties>
        <celtix.version>1.0</celtix.version>
    </properties>
    <repositories>
        <repository>
            <id>objectweb</id>
            <name>ObjectWeb repo</name>
            <url>http://maven.objectweb.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!-- This is a "hack" to overcome the Sun jar issue.   Basically, we download a 
            complete celtix install kit (epl version) and then extract the Sun jars that we
            need and install them.   We use the dependency plugin to download it from the
            objectweb snapshot mirror, then use antrun to fork a build.xml that will conditionally
            call mvn to install the jars if they aren't already there. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dependency-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>getdeps</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/celtix-install</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.objectweb.celtix</groupId>
                                    <artifactId>celtix-distribution</artifactId>
                                    <version>${celtix.version}</version>
                                    <classifier>bin-epl</classifier>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <ant target="installJars">
                                    <property name="localRepository" value="${settings.localRepository}"/>
                                </ant>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
