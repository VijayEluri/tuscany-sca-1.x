<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<project name="setup tomcat " default="prepareTomcat" basedir='.'>
        <property environment="env" />
        <property file="${user.home}/tuscany/build.properties" />
        <property file="${user.home}/build.properties" />

        <property name="tuscany.acceptance.tomcat.version" value='5.5.15' />
        <condition property="tuscany.acceptance.tomcat.zipped" value='apache-tomcat-${tuscany.acceptance.tomcat.version}.zip'>
            <os family="windows"/>
        </condition>
        <condition property="tuscany.acceptance.tomcat.zipped" value='apache-tomcat-${tuscany.acceptance.tomcat.version}.tar.gz'>
            <or>
                <os family="unix"/>
                <os family="mac"/>
            </or>
        </condition>
        <condition property="ant.home" value="${env.ANT_HOME}">
            <os family="unix"/>
        </condition>
        <property name="tuscany.acceptance.tc.dir" value='target/apache-tomcat-${tuscany.acceptance.tomcat.version}' />
        <property name="tuscany.acceptance.target.dir" value='target' />

        <property name="tuscany.acceptance.groupId" value='org/apache/tuscany' />
        <property name="tuscany.acceptance.version" value='SNAPSHOT' />

        <property name="tuscany.sca.acceptance.groupId" value='org/osoa' />
        <property name="tuscany.sca.acceptance.version" value='SNAPSHOT' />

        <property name="tuscany.commonj.acceptance.groupId" value='commonj' />
        <property name="tuscany.commonj.acceptance.version" value='SNAPSHOT' />

        <property name="tuscany.sdo.acceptance.groupId" value='org/apache/tuscany' />
        <property name="tuscany.sdo.acceptance.version" value='SNAPSHOT' />

        <property name="tuscany.acceptance.samples.dir" value='../../samples' />
        <!-- property name="tuscany.maven.repos.dir" value='${user.home}\.maven\repository' / -->
        <!-- change for maven 2.0 -->
        <property name="tuscany.maven.repos.dir" value='${user.home}\.m2\repository' />
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <os family="unix"/>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>

        <target name="init">
                <available property='tomcat.is.available' file='${tuscany.acceptance.tc.dir}/server/lib/catalina.jar' type='file' />
                <available property='tuscany.acceptance.tomcat.zipped.available' file='${tuscany.acceptance.tomcat.zipped}' type='file' />
                <available property='tuscany.acceptance.tomcat.serverxmlorg.available' file='${tuscany.acceptance.tc.dir}/conf/server.xml.original' />
                <available property='tuscany.acceptance.tomcat.contextxmlorg.available' file='${tuscany.acceptance.tc.dir}/conf/context.xml.original' />
        </target>

        <target name="check.for.zip" depends="init" unless='tuscany.acceptance.tomcat.zipped.available'>
                <property name='tuscany.acceptance.tomcat.zipped.full' location="${tuscany.acceptance.tomcat.zipped}" />
                <echo level="error" message="${tuscany.acceptance.tomcat.zipped} file not found here:'${tuscany.acceptance.tomcat.zipped.full}'" />
                <echo level="error" message="Either place zip file there or change ${user.home}/build.properties in home dir to include 'tuscany.acceptance.tomcat.zipped' property to where zip is located. " />
                <fail />
        </target>

        <patternset id="tuscany.acceptance.tc.common">  <!--jars which need to go into tomcat common/lib  -->
                <include name="**/${tuscany.acceptance.groupId}/tuscany-binding-axis/${tuscany.acceptance.version}/tuscany-binding-axis-${tuscany.acceptance.version}.jar" />
                <include name="**/${tuscany.acceptance.groupId}/tuscany-common/${tuscany.acceptance.version}/tuscany-common-${tuscany.acceptance.version}.jar" />
                <include name="**/${tuscany.acceptance.groupId}/tuscany-container-java/${tuscany.acceptance.version}/tuscany-container-java-${tuscany.acceptance.version}.jar" />
                <include name="**/${tuscany.acceptance.groupId}/tuscany-container-js/${tuscany.acceptance.version}/tuscany-container-js-${tuscany.acceptance.version}.jar" />
                <include name="**/${tuscany.acceptance.groupId}/tuscany-core/${tuscany.acceptance.version}/tuscany-core-${tuscany.acceptance.version}.jar" />
                <include name="**/${tuscany.acceptance.groupId}/tuscany-model/${tuscany.acceptance.version}/tuscany-model-${tuscany.acceptance.version}.jar" />

                <include name="**/${tuscany.acceptance.groupId}/tuscany-sdo-impl/${tuscany.acceptance.version}/tuscany-sdo-impl-${tuscany.acceptance.version}.jar" />

                <include name="**/${tuscany.sca.acceptance.groupId}/sca-api/${tuscany.sca.acceptance.version}/sca-api-${tuscany.sca.acceptance.version}.jar" />
                <include name="**/${tuscany.commonj.acceptance.groupId}/sdo-api/${tuscany.commonj.acceptance.version}/sdo-api-${tuscany.commonj.acceptance.version}.jar" />


        	    <!-- Kevin's mod to include DAS jar -->
        	    <include name="**/${tuscany.acceptance.groupId}/tuscany-das-jdbc-${tuscany.acceptance.version}.jar" />
        </patternset>
        <patternset id="tuscany.acceptance.tc.server"> <!--jars which need to go into tomcat server/lib  -->
                <include name="**/${tuscany.acceptance.groupId}/tuscany-tomcat/${tuscany.acceptance.version}/tuscany-tomcat-${tuscany.acceptance.version}.jar" />
        </patternset>
        <patternset id="tuscany.acceptance.dependencies">
                <include name="**/axis/axis/1.2.1/axis-1.2.1.jar" />
                <include name="**/axis/axis-jaxrpc/1.2.1/axis-jaxrpc-1.2.1.jar" />
                <include name="**/axis/axis-saaj/1.2.1/axis-saaj-1.2.1.jar" />
                <include name="**/axis/axis-wsdl4j/1.5.1/axis-wsdl4j-1.5.1.jar" />
                <include name="**/asm/asm/2.2/asm-2.2.jar" />

                <include name="**/org/eclipse/emf/common/2.2.0-I200602160000/common-2.2.0-I200602160000.jar" />
                <include name="**/org/eclipse/emf/ecore/2.2.0-I200602160000/ecore-2.2.0-I200602160000.jar" />
                <include name="**/org/eclipse/emf/ecore-change/2.2.0-I200602160000/ecore-change-2.2.0-I200602160000.jar" />
                <include name="**/org/eclipse/emf/ecore-xmi/2.2.0-I200602160000/ecore-xmi-2.2.0-I200602160000.jar" />
                <include name="**/org/eclipse/xsd/xsd/2.2.0-I200602160000/xsd-2.2.0-I200602160000.jar" />

                <include name="**/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar" />
                <include name="**/commons-discovery/commons-discovery/0.2/commons-discovery-0.2.jar" />

                <!-- Kevin's mod to include Derby jar -->
        	    <include name="**/org.apache.derby/derby/10.1.2.1/derby-10.1.2.1.jar" />
        </patternset>

        <target name="tuscany.tomcat.unzipWindows" if="isWindows" depends='init,check.for.zip' description='Just unzip tomcat' unless='tomcat.is.available'>
                <unzip src="${tuscany.acceptance.tomcat.zipped}" dest="${tuscany.acceptance.target.dir}" />
        </target>
        <target name="tuscany.tomcat.unzipUnix" if="isUnix" depends='init,check.for.zip' description='Just unzip tomcat' unless='tomcat.is.available'>
            <mkdir dir="${tuscany.acceptance.target.dir}" />
            <gunzip src="${tuscany.acceptance.tomcat.zipped}" dest="${tuscany.acceptance.target.dir}/temp.tar"/>
            <!-- Exec tar because ant builtin tar does not preserve execute permissions. -->
            <exec executable="tar" dir="${tuscany.acceptance.target.dir}">
                <arg value="xf"/>
                <arg value="temp.tar"/>
            </exec>
			<delete file="${tuscany.acceptance.target.dir}/temp.tar"/>
        </target>
        <target name="tuscany.tomcat.unzipMac" if="isMac" depends='init,check.for.zip' description='Just unzip tomcat' unless='tomcat.is.available'>
                <antcall target="tuscany.tomcat.unzipUnix" /> <!-- just use unix for now -->
        </target>

        <target name="prepareTomcat" depends='tuscany.tomcat.unzipWindows,tuscany.tomcat.unzipUnix,tuscany.tomcat.unzipMac,tuscany.tomcat.fixup,tuscany.deploy.samples' description='Unzip tomcat, fix it up, and deploy samples'>
                <dirname property='tuscany.acceptance.tc.dir.full' file="${tuscany.acceptance.tc.dir}/bin" />
                <waitfor maxwait="1" maxwaitunit="second" checkevery="200" timeoutproperty="tuscany.tomcat.notstarted" >
                        <http url="http://localhost:8080"/>
                </waitfor>
                <condition property="tuscany.tomcat.alreadystarted">
                    <not>
                     <istrue value="${tuscany.tomcat.notstarted}"/>
                    </not>
                </condition>
                <antcall target="startTomcat" />
                <echo level="info" message="Tomcat fixed up here:  ${tuscany.acceptance.tc.dir.full}" />
                <echo level="info" message="http://localhost:8080/tuscany-samples-helloworldWEB/" />
                
        </target>
        <target name="tuscany.tomcat.fixup" depends='tuscany.tomcat.fixserverconfig' description='Fix up tomcat for tuscany.'>
                <mkdir dir="${tuscany.acceptance.target.dir}" />

                <copy todir="${tuscany.acceptance.tc.dir}/common/lib" flatten='true'>
                        <fileset dir="${tuscany.maven.repos.dir}">
                                <patternset refid="tuscany.acceptance.tc.common" />
                        </fileset>
                        <fileset dir="${tuscany.maven.repos.dir}">
                                <patternset>
                                  <include name="**/org.osoa/jars/sca-api-${tuscany.acceptance.version}.jar" />
                                </patternset>
                        </fileset>
                        <fileset dir="${tuscany.maven.repos.dir}">
                                <patternset refid="tuscany.acceptance.dependencies" />
                        </fileset>
                </copy>
                <copy todir="${tuscany.acceptance.tc.dir}/server/lib" flatten='true'>
                        <fileset dir="${tuscany.maven.repos.dir}">
                                <patternset refid="tuscany.acceptance.tc.server" />
                        </fileset>
                </copy>
        </target>

        <target name="tuscany.deploy.samples" description='Deploy tuscany example wars to tomcat webapps.'>
                <copy todir="${tuscany.acceptance.tc.dir}/webapps" flatten='true'>
                        <fileset dir="${tuscany.acceptance.samples.dir}">
                                <include name="**/*.war" />
                        </fileset>
                </copy>
        </target>
        <target name="backup.server.xml" depends="init" unless='tuscany.acceptance.tomcat.serverxmlorg.available'>
                <copy file='${tuscany.acceptance.tc.dir}/conf/server.xml' tofile='${tuscany.acceptance.tc.dir}/conf/server.xml.original' />
        </target>
        <target name="backup.context.xml" depends="init" unless='tuscany.acceptance.tomcat.contextxmlorg.available'>
                <copy file='${tuscany.acceptance.tc.dir}/conf/context.xml' tofile='${tuscany.acceptance.tc.dir}/conf/context.xml.original' />
        </target>
        <target name="tuscany.tomcat.fixserverconfig" depends='tuscany.tomcat.fixserverxml,tuscany.tomcat.fixcontextxml' description='Add listeners' />
        <target name="tuscany.tomcat.fixserverxml" depends='init,backup.server.xml'  unless='tuscany.acceptance.tomcat.serverxmlorg.available'>
                <property name="tuscany.acceptance.tomcat.serverxmlorg.available" value='true' />
                
                <xslt
                  in="${tuscany.acceptance.tc.dir}/conf/server.xml.original"
                      style="server.xsl" out="${tuscany.acceptance.tc.dir}/conf/server.xml"
                      >

                 </xslt>
        </target>
        <target name="tuscany.tomcat.fixcontextxml" depends='init,backup.context.xml'  unless='tuscany.acceptance.tomcat.contextxmlorg.available'>
                <property name="tuscany.acceptance.tomcat.contextxmlorg.available" value='true' />
                
                <xslt
                  in="${tuscany.acceptance.tc.dir}/conf/context.xml.original"
                      style="context.xsl" out="${tuscany.acceptance.tc.dir}/conf/context.xml"
                      >

                 </xslt>
        </target>
        
        <target name="startTomcatWindows" if="isWindows" unless='tuscany.tomcat.alreadystarted' >
                <exec spawn='true' vmlauncher="false" failonerror='false' dir="${tuscany.acceptance.tc.dir}\bin" executable="cmd.exe" >
                        <arg line="/C start &quot; Tomcat running ${tuscany.acceptance.tc.dir}&quot;  catalina run &amp;&amp;   exit" />
                </exec>
        </target>
        <target name="startTomcatUnix" if="isUnix" unless='tuscany.tomcat.alreadystarted'>
            <exec spawn='true' vmlauncher="false" failonerror='false' dir="${tuscany.acceptance.tc.dir}/bin" executable="xterm" >
                <env key='CATALINA_HOME' value='${env.PWD}/${tuscany.acceptance.tc.dir}'/>
                <arg line="-e ./catalina.sh run"/>
            </exec>
        </target>
        <target name="startTomcatMac" if="isMac" unless='tuscany.tomcat.alreadystarted' >
                <antcall target="startTomcatUnix" /> <!--just use unix for now -->
<!--                
                 <java classname="org.apache.catalina.startup.Bootstrap" fork="true" spawn='true' failonerror="false" maxmemory="65m" dir='E:\dev\beajanus\trunk\acceptance\target\apache-tomcat-5.5.12\bin'>
                <jvmarg value="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager" /> 
                <jvmarg value="-Djava.util.logging.config.file=${catalina.base}\conf\logging.properties" /> 
                <jvmarg value="-Djava.endorsed.dirs=E:\dev\beajanus\trunk\acceptance\target\apache-tomcat-5.5.12\common\endorsed" /> 
                <jvmarg value="-Dcatalina.base=E:\dev\beajanus\trunk\acceptance\target\apache-tomcat-5.5.12" /> 
                <jvmarg value="-Djava.io.tmpdir=E:\dev\beajanus\trunk\acceptance\target\apache-tomcat-5.5.12\temp" /> 
                <jvmarg value="-D-Dcatalina.home=E:\dev\beajanus\trunk\acceptance\target\apache-tomcat-5.5.12" /> 
                <arg value="start"/> 

                 <classpath>
                   <pathelement path="E:/bin/jdk1.5.0_05/lib/tools.jar:E:/dev/beajanus/trunk/acceptance/target/apache-tomcat-5.5.12\bin/bootstrap.jar"/>
                 </classpath>
               </java>
               -->
        </target>

        <target name="tuscany.tomcat.alreadystartedmsg" if="tuscany.tomcat.alreadystarted">
             <echo level="info" message="Tomcat has been already started! ${tuscany.tomcat.alreadystarted}" />
        </target>
        <target name="startTomcat" description="Start up tomcat." depends="tuscany.tomcat.alreadystartedmsg,startTomcatWindows,startTomcatUnix,startTomcatMac" unless='tuscany.tomcat.alreadystarted'>
                <!-- env key="CATALINA_OPTS" value="-Dhttp.proxyHost=localhost  -Dhttp.proxyPort=8090 -DproxySet=true"/-->
                <sleep seconds="5"/> <!-- it's going to at least require this -->
                <waitfor maxwait="12" maxwaitunit="second" checkevery="200">
                        <http url="http://localhost:8080"/>
                </waitfor>
                
        </target>

        <target name="clean" description='Clean out all built artifacts'>
                <delete dir="${tuscany.acceptance.target.dir}" />
        </target>

        <target name='setup.TC.antscripts' depends='tuscany.tomcat.unzipWindows,tuscany.tomcat.unzipUnix,tuscany.tomcat.unzipMac'>
                <!-- Configure the custom Ant tasks for the Manager application -->
                <taskdef resource="org/apache/catalina/ant/catalina.tasks">
                        <classpath>
                                <fileset dir="${tuscany.acceptance.tc.dir}/server/lib">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${tuscany.acceptance.tc.dir}/common/lib">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${tuscany.acceptance.tc.dir}/bin">
                                        <include name="*.jar" />
                                </fileset>
                        </classpath>
                </taskdef>

        </target>

</project>
