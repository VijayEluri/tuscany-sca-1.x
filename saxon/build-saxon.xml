<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<project name="SaxonZipInstaller" default="install-saxon-nomaven">

	<!-- This target will set the standard properties and ensure that the localRepository property is set if it is not already -->
	<target name="init" depends="is.localRepository.set.if,is.localRepository.set.else">
		<property name="saxon.version" value="9.0.0.2" />
		<property name="saxon.dir" value="${basedir}/target/saxon-download" />
		<property name="saxon.url" value="http://prdownloads.sourceforge.net/saxon/saxonb9-0-0-2j.zip" />
		<echo>Maven Local Repository: ${localRepository}</echo>
	</target>

	<!-- Tests whether localRepository is set. If it is then it will run the is.localRepository.set.if target else it -->
	<!-- will run the is.localRepository.set.else target -->
	<target name="is.localRepository.set">
		<condition property="is.localRepository.set.is-true">
			<not>
				<isset property="localRepository"/>
			</not>
		</condition>
	</target>

	<!-- localRepository already set so use it -->
	<target name="is.localRepository.set.if" depends="is.localRepository.set" if="is.localRepository.set.is-true">
		<property name="localRepository" value="${user.home}/.m2/repository"/>
		<echo message="Maven Local Repository: using default of ${localRepository}"/>
	</target>

	<!-- localRepository not set so use the default value -->
	<target name="is.localRepository.set.else" depends="is.localRepository.set" unless="is.localRepository.set.is-true">
		<echo message="Maven Local Repository: already set ${localRepository}"/>
	</target>

	<target name="check-saxon-installed" depends="init">
		<condition property="already.installed">
			<and>
				<available file="${localRepository}/net/sf/saxon/saxon/${saxon.version}/saxon-${saxon.version}.jar" />
				<available file="${localRepository}/net/sf/saxon/saxon-dom/${saxon.version}/saxon-dom-${saxon.version}.jar" />
				<available file="${localRepository}/net/sf/saxon/saxon-api/${saxon.version}/saxon-api-${saxon.version}.jar" />
				<available file="${localRepository}/net/sf/saxon/saxon-xpath/${saxon.version}/saxon-xpath-${saxon.version}.jar" />
			</and>
		</condition>
		<condition property="maven.suffix" value="">
			<os family="unix" />
		</condition>
		<condition property="maven.suffix" value=".bat">
			<os family="windows" />
		</condition>
	</target>


	<target name="check-saxon-unpacked" depends="init">
		<condition property="already.unpacked">
			<available file="${saxon.dir}" />
		</condition>
	</target>

	<target name="install-saxon" depends="check-saxon-installed" unless="already.installed">
		<mkdir dir="${saxon.dir}" />
		<get src="${saxon.url}" dest="${saxon.dir}/saxon-${saxon.version}.zip" verbose="true" usetimestamp="true" />
		<unzip src="${saxon.dir}/saxon-${saxon.version}.zip" dest="${saxon.dir}" overwrite="false">
		</unzip>
		<exec executable="mvn${maven.suffix}" dir="${basedir}" failonerror="false">
			<arg line="install:install-file -Dmaven.repo.local=${localRepository} -DgroupId=net.sf.saxon  -DartifactId=saxon -Dversion=${saxon.version} -Dpackaging=jar -DgeneratePom=true -Dfile=${saxon.dir}/saxon9.jar" />
		</exec>
		<exec executable="mvn${maven.suffix}" dir="${basedir}" failonerror="false">
			<arg line="install:install-file -Dmaven.repo.local=${localRepository} -DgroupId=net.sf.saxon  -DartifactId=saxon-dom -Dversion=${saxon.version} -Dpackaging=jar -DgeneratePom=true -Dfile=${saxon.dir}/saxon9-dom.jar" />
		</exec>
		<exec executable="mvn${maven.suffix}" dir="${basedir}" failonerror="false">
			<arg line="install:install-file -Dmaven.repo.local=${localRepository} -DgroupId=net.sf.saxon  -DartifactId=saxon-api -Dversion=${saxon.version} -Dpackaging=jar -DgeneratePom=true -Dfile=${saxon.dir}/saxon9-s9api.jar" />
		</exec>
	    <exec executable="mvn${maven.suffix}" dir="${basedir}" failonerror="false">
	        <arg line="install:install-file -Dmaven.repo.local=${localRepository} -DgroupId=net.sf.saxon  -DartifactId=saxon-xpath -Dversion=${saxon.version} -Dpackaging=jar -DgeneratePom=true -Dfile=${saxon.dir}/saxon9-xpath.jar" />
	    </exec>
	</target>

	<target name="install-saxon-nomaven" depends="check-saxon-installed" unless="already.installed">
		<mkdir dir="${saxon.dir}" />
		<get src="${saxon.url}" dest="${saxon.dir}/saxon-${saxon.version}.zip" verbose="true" usetimestamp="true" />
		<unzip src="${saxon.dir}/saxon-${saxon.version}.zip" dest="${saxon.dir}" overwrite="false">
		</unzip>
		<copy file="${saxon.dir}/saxon9.jar" tofile="${localRepository}/net/sf/saxon/saxon/${saxon.version}/saxon-${saxon.version}.jar" />
		<copy file="${saxon.dir}/saxon9-dom.jar" tofile="${localRepository}/net/sf/saxon/saxon-dom/${saxon.version}/saxon-dom-${saxon.version}.jar" />
		<copy file="${saxon.dir}/saxon9-s9api.jar" tofile="${localRepository}/net/sf/saxon/saxon-api/${saxon.version}/saxon-api-${saxon.version}.jar" />
		<copy file="${saxon.dir}/saxon9-xpath.jar" tofile="${localRepository}/net/sf/saxon/saxon-xpath/${saxon.version}/saxon-xpath-${saxon.version}.jar" />
	</target>

	<target name="clean-saxon-files" depends="init">
		<delete dir="${saxon.dir}" />
	</target>
</project>
