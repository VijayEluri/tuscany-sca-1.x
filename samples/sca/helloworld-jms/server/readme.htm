<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
    <!-- Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. -->
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <meta http-equiv="Content-Style-Type" content="text/css">
    <title>Tuscany Hello World JMS Service Sample</title><!-- LINK rel="stylesheet" href="ait.css" type="text/css" --><!-- maven -->
    <style type="text/css" media="all">
    @import url("../../../../css/maven-base.css");
    @import url("../../../../css/maven-theme.css");
    @import url("../../../../css/site.css");
    </style>
    <link rel="stylesheet" href="./css/print.css" type="text/css" media="print">
    <!-- end maven -->
</head>
    <body>
    <h2>Tuscany Hello World JMS Service Sample</h2>
    <h3>Overview</h3>
    <p>
    The Tuscany hello world jms sample shows using the Tuscany SCA runtime using the Celtix/J2SE environment to &nbsp;provide&nbsp;a web service using
    XML over JMS as well as SOAP over HTTP.
    </p>
    <h3>Location</h3> This sample is located &nbsp;in the samples\sca\helloworld-jms\server 
    directory.<br>
    <h3>Setup</h3> 
    The jars for a <a href="../../../../docs/sampleSetup.htm" target="_blank">J2SE 
    setup</a> &nbsp;including those necessary&nbsp; for web services are required 
    including the sample's own jar 
    <span style="font-weight: bold;">
    sample-helloworldjms-service-incubating-M1.jar
    </span>
    . <h3>Running</h3> Using JDK 1.5 java command with the previous mentioned jars, including the tuscany-celtix.jar, start the JMS broker and then
    run the class&nbsp;helloworld.HelloWorldServer.
    <pre>
        java -cp ../../../../lib/tuscany-runtime-incubating-M1.jar:../../../../lib/celtix/tuscany-celtix-incubating-M1.jar org.activemq.spring.Main activemq.xml
        java -cp ../../../../lib/tuscany-runtime-incubating-M1.jar:../../../../lib/celtix/tuscany-celtix-incubating-M1.jar:target/sample-helloworldjms-service-incubating-M1.jar helloworld.HelloWorldServer
    </pre>
    

    <h3>Code Overview</h3> The source files are physically organized as shown below:<br>
    <table style="text-align: left; width: 100%;" border="1" cellpadding="2" cellspacing="2">
        <tbody>
        <tr>
            <td>
                <pre>
   +---main
   +---java
   &brvbar;   +---helloworld
   &brvbar;           HelloWorldServer.java
   &brvbar;           HelloWorldImpl.java
   &brvbar;           HelloWorldService.java
   +---resources
     &brvbar;   sca.module
     +---wsdl
            helloworld.wsdl 
   activemq.xml
                </pre>
            </td>
        </tr>
        </tbody>
    </table>
    <br>
    <br>
    <table style="text-align: left; width: 100%; height: 154px;" border="0" cellpadding="2" cellspacing="2">
        <tbody>
        <tr>
            <td>HelloWorldServer.java</td>
            <td>Main method to startup the Tuscany runtime which will startup the services defined in sca.module</td>
        </tr>
        <tr>
            <td style="vertical-align: top;">HelloWorldService.java</td>
            <td>Defines the Java interface implemented by the component.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;">HelloWorldImpl.java</td>
            <td>Implements the SCA component. Uses the SCA service annotation
            tag on the class to show what SCA interface is being implemented.</td>
        </tr>
        <tr>
            <td style="vertical-align: top; height: 62px;">sca.module</td>
            <td style="height: 62px;">Defines the SCA module, entryPoint and component. 
            Defines for the HelloWorldServiceComponent component and the Java class that 
            implements the component For the entryPoint it defines WSDL for the service, the 
            Java interface provided by the service, and wires the service to the&nbsp;HelloWorldServiceComponent</td>
        </tr>
        <tr>
            <td>helloworld.wsdl</td>
            <td>WSDL for the service.</td>
        </tr>
        <tr>
            <td>activemq.xml</td>
            <td>Configuration file for ActiveMQ to setup the broker</td>
        </tr>
        </tbody>
    </table>
    </body>
</html>