<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><!-- Copyright (c) 2005 The Apache Software Foundation or its licensors, as applicable. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> <meta http-equiv="Content-Style-Type" content="text/css"><title>Tuscany
Hello World Web Sample</title> <!-- LINK rel="stylesheet" href="ait.css" type="text/css" --><!-- maven --><style type="text/css" media="all">
@import url("../../../../css/maven-base.css");
@import url("../../../../css/maven-theme.css");
@import url("../../../../css/site.css");
</style>
<link rel="stylesheet" href="./css/print.css" type="text/css" media="print"><!-- end maven --></head>
<body><h2>Tuscany Hello World WS Client Sample</h2>
<h3>Overview</h3>
<p>The Tuscany hello world WS client sample shows using the
Tuscany SCA runtime in a J2SE environment invoking a web service. </p>
<h3>Location</h3>
This sample is located &nbsp;in the samples\sca\helloworldwsclient
directory.<br><h3>Setup</h3>
The jars for a <a href="../../../docs/sampleSetup.htm" target="_blank">J2SE setup</a> &nbsp;including
those necessary&nbsp;
for web services are required including the sample's own jar <span style="font-weight: bold;">helloworldwsclient-SNAPSHOT.jar</span>.
<h3>Running</h3>
Using JDK 1.5 java command with the previous mentioned jars run the
class&nbsp;elloworldwsclient.HelloWorldClient
<h3>Results</h3>
<p>The sample when run should simply display to the standard
output:<br> <code>Hello World</code></p>
<h3>Code Overview</h3>
The source files are physically organized as shown below:<br>
<table style="text-align: left; width: 100%;" border="1" cellpadding="2" cellspacing="2"> <tbody> <tr>
<td><pre>src<br>+---main<br>    +---java<br>    &brvbar;   +---helloworld<br>    &brvbar;           HelloWorldClient.java<br>    &brvbar;           HelloWorldService.java<br>    &brvbar;<br>    +---resources<br>        &brvbar;   logging.properties<br>        &brvbar;   sca.module<br>        &brvbar;<br>        +---wsdl<br>                helloworld.wsdl<br><br><br> <br></pre> </td> </tr>
</tbody>
</table><br>
<br><table style="text-align: left; width: 100%; height: 154px;" border="0" cellpadding="2" cellspacing="2"> <tbody> <tr>
<td style="vertical-align: top; height: 62px;">sca.module</td>
<td style="height: 62px;">Defines the SCA module,
externalService and component. Defines for the
HelloWorldServiceComponent component and the Java class that implements
the component For the externalService it defines WSDL for the service,
the Java interface provided by the service.
The&nbsp;the&nbsp;HelloWorldServiceComponent is via a
referenced wired to the externalService</td> </tr> <tr>
<td style="vertical-align: top;">HelloWorldClient.java</td>
<td>Creates a Tuscany runtime and starts it. &nbsp;Obtains
the module context which was defined by the sca.module file. From the
module context locates the HelloWorldService entryPoint and then
calls&nbsp; the getGreetings method to invoke the web service defined in the helloword.wsdl.</td>
</tr> <tr> <td style="vertical-align: top; height: 26px;">HelloWorldService.java</td>
<td style="height: 26px;">Defines the Java interface
implemented by the component.</td> </tr>   <tr> <td>helloworld.wsdl</td>
<td>WSDL for the service.</td> </tr> </tbody>
</table></body></html>